{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19011\\\\Desktop\\\\my-youtube\\\\src\\\\components\\\\ChatMessages.js\",\n  _s = $RefreshSig$();\nimport react, { useEffect, useState } from \"react\";\nimport LiveChat from \"./LiveChat\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMessage } from \"../utils/chatSlice\";\nimport { generateRandomNames, generateString } from \"../utils/helper\";\nimport { OFF_SET_LIVE_CHAT } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatMessages = () => {\n  _s();\n  const [liveMessage, setLiveMessage] = useState('');\n  const dispatch = useDispatch();\n  const chats = useSelector(store => store.chat.messages);\n  useEffect(() => {\n    const i = setInterval(() => {\n      // console.log(\"API Polling\")\n      dispatch(addMessage({\n        name: generateRandomNames(),\n        message: `${generateString(OFF_SET_LIVE_CHAT)} ðŸŽ¯`\n      }));\n    }, 500);\n    return () => clearInterval(i);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-1/4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-slate-300 ml-2   h-[460px] overflow-y-scroll scroll flex flex-col-reverse \",\n      children: chats.map((c, i) => {\n        return /*#__PURE__*/_jsxDEV(LiveChat, {\n          name: c.name,\n          message: c.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 ml-2 border border-blue-300 \",\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \" m-2 w-[308px] px-2 decoration-green-500 \",\n        value: liveMessage,\n        onChange: e => {\n          setLiveMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 px-2 text-white rounded-md\",\n        onClick: () => {\n          dispatch(addMessage({\n            name: \"Ayush Tiwari\",\n            message: liveMessage\n          }));\n          setLiveMessage(\"\");\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatMessages, \"rl06SChVcqalz2qqIv3qsMwGvRs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ChatMessages;\nexport default ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"names":["react","useEffect","useState","LiveChat","useDispatch","useSelector","addMessage","generateRandomNames","generateString","OFF_SET_LIVE_CHAT","jsxDEV","_jsxDEV","ChatMessages","_s","liveMessage","setLiveMessage","dispatch","chats","store","chat","messages","i","setInterval","name","message","clearInterval","className","children","map","c","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/19011/Desktop/my-youtube/src/components/ChatMessages.js"],"sourcesContent":["import react, { useEffect, useState } from \"react\";\r\nimport LiveChat from \"./LiveChat\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMessage } from \"../utils/chatSlice\";\r\nimport { generateRandomNames, generateString } from \"../utils/helper\";\r\nimport { OFF_SET_LIVE_CHAT } from \"../utils/constants\";\r\n\r\nconst ChatMessages = ()=>{\r\n\r\nconst [liveMessage , setLiveMessage] = useState('')\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst chats = useSelector(store=>store.chat.messages);\r\n\r\nuseEffect(()=>{\r\n  const i =  setInterval(()=>{ \r\n    // console.log(\"API Polling\")\r\n    dispatch(addMessage({\r\n        name:generateRandomNames(),\r\n        message:`${generateString(OFF_SET_LIVE_CHAT)} ðŸŽ¯`,\r\n    }))\r\n  } , 500);\r\n\r\n  return ()=> clearInterval(i);\r\n\r\n} , []);\r\n\r\n\r\n    return (\r\n        <div className=\"w-1/4\">\r\n        <div className=\"border border-slate-300 ml-2   h-[460px] overflow-y-scroll scroll flex flex-col-reverse \">\r\n            {\r\n                chats.map((c , i)=>{\r\n                    return(\r\n                        <LiveChat name={c.name} message={c.message}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n        <div className=\"bg-green-100 ml-2 border border-blue-300 \" \r\n              onSubmit={(e)=>{e.preventDefault()}}\r\n        >\r\n              <input \r\n                className=\" m-2 w-[308px] px-2 decoration-green-500 \"\r\n                value={liveMessage}\r\n                onChange={(e)=>{setLiveMessage(e.target.value)}}\r\n                >\r\n              </input>\r\n              <button \r\n                className=\"bg-green-500 px-2 text-white rounded-md\"\r\n                onClick={()=>{dispatch(addMessage({\r\n                    name : \"Ayush Tiwari\",\r\n                    message : liveMessage\r\n                }))\r\n                  setLiveMessage(\"\");\r\n                }}\r\n              >\r\n                Send\r\n              </button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ChatMessages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}